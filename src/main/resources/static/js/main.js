const toggleBtn = document.querySelector('.navbar__toggleBtn');
const menu = document.querySelector('.navbar__menu');
const links = document.querySelector('.navbar__links');
const navbar = document.querySelector('.navbar');
const navbarlogo = navbar.querySelector('.navbar__logo');
let hamburgMenuShow = false;
const loading_page = document.getElementById("load");


window.onload = function () {
    setTimeout(function () {
        loading_page.style.display = 'none';
    }, 500);
}

toggleBtn.addEventListener('click', () => {
    menu.classList.toggle('active');
    links.classList.toggle('active');
    if (menu.classList.contains('active')) {
        hamburgMenuShow = true;
        navbar.style.background = "#2a5dfa";
        navbarlogo.style.visibility = 'hidden';
        //navbar.style.background = "#63c404";
    } else {
        hamburgMenuShow = false;
        navbar.removeAttribute('style');
        navbarlogo.style.visibility = 'visible';
    }
})

window.onresize = function () {
    const width = window.innerWidth;
    const height = window.innerHeight;

    if (width > 736) {
        menu.classList.remove('active');
        links.classList.remove('active');
        navbar.removeAttribute('style');
        navbarlogo.style.visibility = 'visible';
    } else if (width <= 736 && hamburgMenuShow) {
        menu.classList.add('active');
        links.classList.add('active');
        navbar.style.background = "#63c404";
        navbarlogo.style.visibility = 'hidden';
    }
}

$('.slider').slick({
    autoplay: true,
    autoplaySpeed: 2000,
    dots: true,
    infinite: true,
    speed: 500,
    fade: true,
    cssEase: 'linear',
    arrows: false,
    adaptiveHeight: true,
});

$(function () {
//     이미지 클릭시 해당 이미지 모달
    /*$("p img").click(function () {
        let img = new Image();
        let address = $(this).attr("src");
        img.src = $(this).attr("src").replace("profile.png", "stand.png")
        img.width = img.width * 0.5;
        img.height = img.height * 0.5;
        $('.modalBox').html(img);
        $(".modal").show();
    });

// 모달 클릭할때 이미지 닫음
    $(".modal").click(function (e) {
        $(".modal").toggle();
    });*/
});


document.getElementById('skillmodal').addEventListener('click', function () {
    $("#skillmodal").removeClass("show");
    $(".modal-backdrop").remove();
    $('body').removeClass('modal-open');
    $('body').css('padding-right', '');
    $('body').css('overflow', '');
    $("#skillmodal").hide();
});


function skillModalById(skillnum, lang) {
    let skillmodal = new bootstrap.Modal(document.getElementById('skillmodal'), {
        backdrop: false, focus: true
    });
    let skillname = document.getElementById("skillname");
    let skilldesc = document.getElementById("skilldesc");
    let skillcondition = document.getElementById("skillcondition");

    let skillname_ko = document.getElementById("kor_name" + skillnum).innerText.trim();
    let skillname_jp = document.getElementById("jpn_name" + skillnum).innerText.trim();
    let skilleffect_ko = document.getElementById("kor_effect" + skillnum).innerText.trim();
    let skilleffect_jp = document.getElementById("jpn_effect" + skillnum).innerText.trim();
    let img = document.getElementById("img" + skillnum).src;
    let prec1 = document.getElementById("prec1_" + skillnum).innerText.trim();
    let c1 = document.getElementById("c1_" + skillnum).innerText.trim();
    let prec2 = document.getElementById("prec2_" + skillnum).innerText.trim();
    let c2 = document.getElementById("c2_" + skillnum).innerText.trim();

    console.log(":" + prec1 + ":");

    const urlParams = new URL(window.location.href).searchParams;
    //let lang = urlParams.get('lang');
    let conditions = "";
    let condition = "";
    let precondition = "";
    let or_string = "";
    if (lang == null || lang === undefined || !lang || lang == "ko") {
        skillname.innerHTML = "<img src='" + img + "' style='width: auto; height: 2em; padding-right:1rem;'></img>" + skillname_ko;
        skilldesc.innerHTML = skilleffect_ko.replaceAll("<", "<br><").replaceAll("＜", "<br>＜");
        condition = "발동조건<br>";
        precondition = "전제조건<br>";
        or_string = "<br>또는<br><br>";
    } else if (lang == "ja") {
        skillname.innerHTML = "<img src='" + img + "' style='width: auto; height: 2em; padding-right:1rem;'></img>" + skillname_jp;
        skilldesc.innerHTML = skilleffect_jp.replaceAll("<", "<br><").replaceAll("＜", "<br>＜");
        condition = "発動条件<br>";
        precondition = "前提条件<br>";
        or_string = "<br>または<br><br>";
    } else if (lang == "en") {
        skillname.innerHTML = "<img src='" + img + "' style='width: auto; height: 2em; padding-right:1rem;'></img>" + skillname_jp;
        skilldesc.innerHTML = skilleffect_jp.replaceAll("<", "<br><").replaceAll("＜", "<br>＜");
        conditions = "Conditions<br>";
        precondition = "Pre-Conditions<br>";
        or_string = "<br>or<br><br>";
    }
    if (prec1 != "") {
        conditions += precondition;
        prec1 = prec1.replaceAll("&", "<br>");
        conditions += prec1 + "<br>";
    }
    if (c1 != "") {
        conditions += condition;
        c1 = c1.replaceAll("&", "<br>");
        conditions += c1 + "<br>";
    }
    if (prec2 != "" || c2 != "") {
        conditions += or_string;
    }
    if (prec2 != "") {
        conditions += precondition;
        prec2 = prec2.replaceAll("&", "<br>");
        conditions += prec2 + "<br>";
    }
    if (c2 != "") {
        conditions += condition;
        c2 = c2.replaceAll("&", "<br>");
        conditions += c2 + "<br>";
    }

    skillcondition.innerHTML = conditions.replaceAll("@", " @ ");
    skillmodal.show();
}

function skillsearch() {
    let input, filter, skillList, skillBoxes, i, j, txtValue;
    input = document.getElementById("skill-search");
    filter = input.value.toUpperCase();
    skillList = document.getElementById("skillList");
    skillBoxes = skillList.getElementsByClassName("skillbox");

    for (i = 0; i < skillBoxes.length; i++) {
        let cardBodies = skillBoxes[i].getElementsByClassName("card-body");
        for (j = 0; j < cardBodies.length; j++) {
            let searchWords = cardBodies[j].getElementsByClassName("search-word");
            for (let k = 0; k < searchWords.length; k++) {
                txtValue = searchWords[k].innerText || searchWords[k].textContent;
                if (txtValue.toUpperCase().indexOf(filter) > -1 && filter !== "") {
                    skillBoxes[i].style.display = "";
                } else if (filter == "") {
                    skillBoxes[i].style.display = "";
                } else {
                    skillBoxes[i].style.display = "none";
                }
            }
        }
    }
}

function addInshiRow(lang) {
    var ids = [10360201, 10420101, 10380101, 10230101, 10520201, 10070201, 11060101, 10220201, 11070101, 10890101, 10410201, 10710201, 10430101, 10200201, 10300201, 10220101, 10510201, 10260101, 10480201, 10400201, 10600201, 10370201, 10500201, 10580101, 10280101, 10740201, 10830201, 10800101, 10080201, 1002701, 1002901, 1002801, 1002601, 10640201, 10100201, 10400101, 3000601, 3100901, 10830101, 10500101, 11000101, 1000701, 10380201, 10230201, 10610101, 10090201, 10050201, 10880101, 10770101, 10370101, 10160101, 10870101, 10580201, 10360101, 3101101, 3101201, 3101301, 10320101, 3000101, 10070301, 10480101, 10460201, 3000201, 2100201, 2102201, 2100301, 2102301, 2100401, 2102401, 2100501, 2102501, 2100101, 2102101, 2010601, 10650101, 10680201, 11050101, 10270201, 10250101, 2020301, 2017001, 10200101, 2026001, 10440101, 10290201, 2011301, 10100101, 1000801, 10150101, 2015901, 2004801, 1001701, 10660101, 1000901, 2002701, 10260201, 2014701, 4000101, 10990101, 2013701, 1003201, 10080101, 2024201, 2014001, 2010501, 10600101, 10460101, 10130301, 2024501, 10040201, 3000301, 3000501, 3000401, 10450201, 10110201, 2003401, 2003501, 2003301, 2028501, 10620201, 10140201, 2011601, 2025301, 2023901, 1001901, 10010101, 2016301, 201, 2012201, 2005601, 101, 2010801, 1001301, 2006501, 2015701, 2016501, 10700101, 1201, 10120101, 2028801, 10310101, 1002001, 10510101, 10330101, 10910101, 2007201, 10590201, 2007701, 2007801, 10620101, 2022301, 2103001, 2029501, 2026801, 2012001, 301, 2027501, 10450101, 10240101, 1000101, 10640101, 10240201, 3100501, 10140101, 10090101, 2016201, 10300101, 2021501, 10180101, 2025401, 10310201, 2004601, 2004701, 2011201, 1002401, 2004501, 10670301, 2020701, 3201, 1001801, 1003101, 2010401, 2010301, 2013601, 2022801, 2015101, 10680301, 10600301, 2024401, 10290101, 2015601, 2011901, 2013001, 2100901, 2101501, 2101001, 2101601, 2101301, 2101901, 2101101, 2101701, 2101201, 2101801, 2100801, 2101401, 2016701, 10270101, 2025601, 2027301, 3100201, 10520101, 10010201, 2020801, 2016401, 10710101, 2026401, 2026901, 2024001, 10550101, 2007001, 2021701, 2014801, 2028901, 10070101, 2000701, 2000401, 2027901, 3301, 2011101, 2011001, 2012901, 2028301, 2022501, 2000601, 2006301, 2010001, 2003001, 2027101, 2005901, 10410101, 2201, 2008601, 2013201, 2008801, 2015301, 2008701, 2013101, 2008001, 10020101, 2012701, 2005301, 1003301, 2007501, 2002501, 2002001, 2022901, 2014901, 1003501, 3101001, 2000901, 2029101, 2024901, 2007601, 2102001, 2021001, 2016801, 2007101, 10490101, 10680101, 2027601, 10350101, 10060101, 2012801, 2014101, 2012601, 10570101, 2000101, 2025001, 2024101, 10690201, 2027401, 2009901, 2023501, 2023601, 2102801, 2016001, 2004901, 2025201, 2001801, 10320201, 2006101, 2002601, 10350201, 2100701, 2009801, 2009501, 2025901, 10120201, 2028101, 1000301, 1000601, 1001601, 10530201, 2005701, 10390101, 10010301, 1001101, 1001201, 2002801, 10190101, 2014201, 2001201, 2022401, 2016101, 2006901, 2022001, 1003401, 2000201, 2013301, 2301, 2008901, 2013901, 2009101, 2015401, 2006001, 2009001, 2013801, 2008101, 2010901, 1002501, 10930101, 2028001, 3100701, 2020101, 2029301, 10590101, 2006201, 2010101, 2002901, 10250201, 2026701, 10390201, 10340101, 2025501, 2005401, 2023201, 2028601, 2021201, 10150201, 2029201, 2102901, 2023101, 10860101, 10690101, 2023801, 2027201, 2021901, 2005801, 2010201, 2005501, 2027001, 2029001, 10470101, 2023701, 2001101, 1001001, 2020201, 2022601, 2001701, 10670101, 2002101, 11040101, 2002201, 10130201, 1002301, 1002201, 2005101, 2024801, 2000801, 2011501, 10560101, 2000301, 1003001, 3100401, 2013501, 2001301, 401, 1000401, 2006601, 10030301, 2021101, 2021301, 10020201, 10170101, 2023401, 2102701, 3100101, 3100601, 2007401, 2028701, 2026101, 10210201, 10340201, 10160201, 10720101, 10050101, 10530101, 2027701, 10670201, 10980101, 3100301, 10540101, 2015801, 10210101, 10630101, 1000501, 2022701, 2022201, 2012301, 2013401, 2006401, 2003701, 2003801, 2003601, 2019001, 3101, 2009701, 2009601, 2020001, 2028401, 2023001, 2024301, 2001001, 10560201, 2001901, 1001401, 2006801, 10030101, 2015001, 2024601, 10110101, 3100801, 10040101, 10030201, 2100601, 11090101, 11080101, 10170201, 10060201, 2025801, 2005001, 2026501, 2021601, 10850101, 2022101, 2001501, 1101, 10760101, 1001501, 10190201, 10180201, 2006701, 2014301, 2010701, 10130101, 501, 2023301, 2020401, 2011401, 10610201, 2026601, 2028201, 2012101, 2401, 2009201, 2014601, 2009401, 2015501, 2009301, 2014501, 2008201, 2101, 2008301, 2012501, 2008501, 2015201, 2008401, 2012401, 2007901, 2026201, 2016601, 2001601, 2014401, 3401, 2011801, 2011701, 2020901, 1002101, 2000501, 2102601, 2004401, 2004301, 2002301, 2002401, 10840101, 2016901, 2001401, 10780101, 2007301, 2024701, 1000201, 2029401, 10740101];
    var names = ['...found you.', '『I\'m possible』', '#LookatCurren', '∴win Q.E.D.', '113転び114起き', 'Adventure of 564', 'Bang☆ミラクるわせ！', 'Best day ever', 'Billions of stars', 'Celeste Oath', 'CHERRY☆スクランブル', 'Danser le présent', 'Ding Dong Boo', 'Do Ya Breakin!', 'Drain for rose', 'Fairy tale', 'Flowering Dreams', 'G00 1st.F∞;', 'GALmem.ふぉーえば♪', 'GET DOWN', 'Go☆Go☆for it!', 'Guten Appetit♪', 'Hephaistos', 'I Never Goof Up！', 'I\'M☆FULL☆SPEED!!', 'Illuminate you', 'Immortal Work', 'Info: Acquired', 'Into High Gear!', 'JBCLクラシック', 'JBCクラシック', 'JBCスプリント', 'JDダービー', 'jingle all the way', 'Joyful Voyage!', 'KEEP IT REAL.', 'L\'Arcシナリオ', 'L\'Arcの希望', 'Mission: Triumph', 'Nemesis', 'Never Say Never', 'NHKマイルC', 'One True Color', 'Presents from X', 'Pride of KING', 'Queen\'s Lumination', 'Ravissant', 'Reversal Illusion', 'Road to Glory', 'Schwarzes Schwert', 'Shadow Break', 'Silent letter', 'Spooky-Scary-Happy', 'trigger:BEAT', 'U.A.F.シナリオ・スフィア', 'U.A.F.シナリオ・ファイト', 'U.A.F.シナリオ・フリー', 'U=ma2', 'URAシナリオ', 'Vive la GOLD', 'YEAH☆VIVID TIME!', 'α-star*', 'アオハル杯シナリオ', 'アオハル点火・体', 'アオハル点火・体＋', 'アオハル点火・力', 'アオハル点火・力＋', 'アオハル点火・根', 'アオハル点火・根＋', 'アオハル点火・賢', 'アオハル点火・賢＋', 'アオハル点火・速', 'アオハル点火・速＋', 'アクセラレーション', 'アゲてアゲてぷちょへんざ！', 'あっぱれ大盤振る舞い！', 'アド・アストラ', 'あなたに捧げるフリーポア', 'アナタヲ・オイカケテ', 'あやしげな作戦', 'ありったけ', 'アングリング×スキーミング', 'イグニッション', 'いただき☆ストレリチア！', 'いっぱいおあげんしぇ！', 'イナズマステップ', 'ヴィクトリーショット！', 'ヴィクトリアマイル', 'ヴィットーリアに捧ぐ舞踏', 'ウマ好み', 'ウマ込み冷静', 'エリザベス女王杯', 'エンジン全開！大噴射！', 'オークス', 'おひとり様○', 'オペレーション・Cacao', 'お見通し', 'カーニバルボーナス', 'かがやけ☆とまこまい', 'かく乱', 'かしわ記念', 'カッティング×DRIVE！', 'がむしゃら', 'がんばり屋', 'ギアシフト', 'きっとその先へ…！', 'キラキラ☆STARDOM', 'きらめくは海、まばゆきは君', 'キレる脚', 'グッときて♪Chu', 'クライマックスシナリオ', 'グランドマスターズシナリオ', 'グランドライブシナリオ', 'ぐるぐるマミートリック♡', 'ゲインヒール・スペリアー', 'コーナー加速○', 'コーナー回復○', 'コーナー巧者○', 'ごぼう抜き', 'ごろりん！？パワードライブ', 'コンドル猛撃波', 'ささやき', 'しとやかな足取り', 'しゃかりき', 'ジャパンC', 'シューティングスター', 'シンパシー', 'スタミナ', 'スタミナイーター', 'スタミナキープ', 'スピード', 'スピードイーター', 'スプリンターズS', 'スプリントギア', 'スリーセブン', 'スリップストリーム', 'セイリオス', 'ダート', 'タイマン！デッドヒート！', 'たぎる血潮', 'チャージ完了！全速前進！', 'チャンピオンズC', 'つぼみ、ほころぶ時', 'ディオスクロイの流星', 'デラックス☆ファウンテン', 'テンポアップ', 'ときめきが呼ぶほうへ', 'トリック（前）', 'トリック（後）', 'どんっ、パッ、むんっ', 'ナイター○', 'バーニングソウル', 'パイオニア', 'バイブス上昇', 'パス上手', 'パワー', 'ひたむき前進', 'ピュリティオブハート', 'ひらめき☆ランディング', 'フェブラリーS', 'ぶっちぎりロード', 'フラワリー☆マニューバ', 'フランス語力', 'プランチャ☆ガナドール', 'ブリリアント・レッドエース', 'ふり絞り', 'ブルーローズチェイサー', 'フルスロットル', 'ブレイズ・オブ・プライド', 'プレッシャー', 'フレッシュ☆パーラー', 'ペースアップ', 'ペースキープ', 'ホークアイ', 'ホープフルS', 'ポジションセンス', 'ポンテ・デ・ディアマン', 'マイペース', 'マイル', 'マイルCS', 'マイルCS南部杯', 'マイルコーナー○', 'マイル直線○', 'まき直し', 'まっしぐら', 'まなざし', 'ミンナノアタシへ！', 'もちっと・ハレハレ', 'やまっけ', 'ゆきあかり、おいかけて', 'ラッキーセブン', 'リードキープ', 'リスタート', 'レースの真髄・体', 'レースの真髄・体＋', 'レースの真髄・力', 'レースの真髄・力＋', 'レースの真髄・心', 'レースの真髄・心＋', 'レースの真髄・根', 'レースの真髄・根＋', 'レースの真髄・賢', 'レースの真髄・賢＋', 'レースの真髄・速', 'レースの真髄・速＋', 'レコメンド', 'レッツ・アナボリック！', 'ロックオン', 'ロンシャンレース場○', 'ロンシャン適性', 'ワクワククライマックス', 'わやかわ♪マリンダイヴ', 'ワンチャンス', '一匹狼', '一期の夢、刹那の飛翔', '一歩から', '一番乗り', '一足飛び', '万彩☆マーベラス★世界', '上昇気流', '下り坂巧者', '下校の楽しみ', '不動の心', '不沈艦、抜錨ォッ！', '中京レース場○', '中山レース場○', '中盤巧者', '中距離', '中距離コーナー○', '中距離直線○', '二の矢', '二段構え', '交流重賞○', '京都レース場○', '仕掛け抜群', '仕掛け準備', '伏兵○', '会心の一歩', '位置取り押し上げ', '優等生×バクシン＝大勝利ッ', '先行', '先行けん制', '先行コーナー○', '先行ためらい', '先行のコツ○', '先行焦り', '先行直線○', '先行駆け引き', '先頭の景色は譲らない…！', '先頭プライド', '先駆け', '全日本ジュニア優駿', '内弁慶', '内枠得意○', '冬ウマ娘○', '冴える思考', '冷静', '凱旋門賞', '凱旋門賞連覇の夢', '函館レース場○', '切り崩し', '切れ味', '別腹タンク', '前だけ見据えて', '前のめり', '前列狙い', '前途洋々', '剣ヶ峰より、狂気に嗤え', '勝ち鬨ワッショイ！', '勝利に向かって', '勝利のチケットを、君にッ！', '勝利の鼓動', '勢い任せ', '十万バリキ', '危険回避', '叙情、旅路の果てに', '右回り○', '向こう見ず', '向上心', '咲け咲け！私！', '品行方正', '善後策', '土煙', '圧迫感', '地の加護', '地固め', '垂れウマ回避', '型破り', '夏ウマ娘○', '夏空ハレーション', '外差し準備', '外枠得意○', '夢の先へ、届け！', '夢の途中', '大きなリード', '大井レース場○', '大急ぎ', '大盛り！ファーストバイト！', '大詰め', '大阪杯', '天皇賞（春）', '天皇賞（秋）', '奥義・常夏バーニング！！', '好位追走', '姫たるもの、勝利をこの手に', '威風堂々、夢錦！', '安田記念', '宝塚記念', '対抗意識○', '尊み☆ﾗｽﾄｽﾊﾟ—(ﾟ∀ﾟ)—ﾄ!', '小休憩', '小倉レース場○', '小回り○', '尻尾上がり', '展開窺い', '川崎レース場○', '川崎記念', '左回り○', '巧みなステップ', '差し', '差しけん制', '差しコーナー○', '差しためらい', '差しのコツ○', '差し切り体勢', '差し焦り', '差し直線○', '差し駆け引き', '布石', '帝王賞', '幸せの青い光', '序盤巧者', '強心臓', '影打', '影踏み', '彼方、その先へ…', '後方待機', '後方釘付', '徹底マーク○', '心からのおもてにゃし', '心弾んで', '快なる剛力', '快走かな、快走かな！', '快速', '急ぎ足', '急浮上', '急発進', '恐れぬ心', '恵福バルカローレ', '惜しみなし', '想いを背負って', '意気込み十分', '愛と熔けよただ熔けよ', '憧れは桜を越える！', '打開策', '折れない心', '抜かりなし', '抜け出し準備', '抜け駆け禁止', '押し切り準備', '探求心', '推力十分', '掲げよ、己が魂の剣を！', '攻めの姿勢', '新潟レース場○', '日本ダービー', '早仕掛け', '明るい兆し', '春ウマ娘○', '晦冥を照らせ永遠の耀き', '晴れの日○', '暁の御旗『葛城栄主』！', '曇りの日○', '最強の名を懸けて', '有馬記念', '朝日杯FS', '末脚', '本領発揮', '札幌レース場○', '束縛', '来ます来てます来させます！', '東京レース場○', '東京大賞典', '栄養管理', '栄養補給', '根幹距離○', '根性', '桜花賞', '様子見', '歌舞歓楽や、ああをかし', '気合十分', '気迫を込めて', '水平線のその先へ', '汝、皇帝の神威を見よ', '泥遊び○', '海の加護', '海外洋芝適性', '海外遠征', '深呼吸', '渾身の足取り', '溢れる情熱', '火神鳴', '灯穂', '灰色の臨界点', '烈火繚乱、無敵之舞', '煌星のヴォードヴィル', '熱血！！風紀アタック', '狙いを定めて', '玄雲散らす、黄金甲矢', '理運開かりて翔る', '生活リズム', '疾風爆走ペガサスダッシュ！', '登山家', '白い稲妻、見せたるで！', '百錬成鋼', '皐月賞', '盛り返し', '盛岡レース場○', '目くらまし', '直滑降', '直線一気', '直線加速', '直線回復', '直線巧者', '真っ向勝負', '短距離', '短距離コーナー○', '短距離直線○', '砂塵慣れ', '砂払い', '砂浴び○', '確かな足取り', '福島レース場○', '禾スナハチ登ル', '秋ウマ娘○', '秋華賞', '積極策', '究極テイオーステップ', '策士', '粘り腰', '精神一到何事か成らざらん', '精神力', '紅焔ギア/LP1211-M', '絶対は、ボクだ', '綺羅星', '繋ぐ・繋がる×夢・未来', '羅刹、赤翼にて天上へ至らん', '翳り退く、さざめきの矢', '聖夜のミラクルラン！', '脇目も振らず', '臨機応変', '自信家', '自制心', '至上であれ', '船橋レース場○', '良バ場○', '芝', '花開き、世界', '菊花賞', '萌到讓我活過來了！', '薫風、永遠なる瞬間を', '詰め寄り', '読解力', '負けん気', '貴顕の使命を果たすべく', '賢さ', '踏み込み上手', '軽い足取り', '軽やかステップ', '轟！トレセン応援団！！', '込み上げる熱', '迷いなし', '追い上げ', '追込', '追込けん制', '追込コーナー○', '追込ためらい', '追込のコツ○', '追込焦り', '追込直線○', '追込駆け引き', '逃げ', '逃げけん制', '逃げコーナー○', '逃げためらい', '逃げのコツ○', '逃げ焦り', '逃げ直線○', '逃げ駆け引き', '進出開始', '遊びはおしまいっ！', '道悪○', '鋭い眼光', '長距離', '長距離コーナー○', '長距離直線○', '闘争心', '阪神JF', '阪神レース場○', '陽の加護', '隠れ蓑', '集中力', '雨の日○', '雪の日○', '霹靂のアウフヘーベン', '静かな呼吸', '非根幹距離○', '風光る', '食い下がり', '食らいつき', '高松宮記念', '鬼気迫って', '麗しき花信風'];
    var kor_names = ['…found you.', '『I\'m possible』', '#LookatCurren', '∴win Q.E.D.', '113전 114기', 'Adventure of 564', 'Bang☆기적 같은 결과!', 'Best day ever', 'Billions of stars', 'Celeste Oath', 'CHERRY☆스크램블', 'Danser le présent', 'Ding Dong Boo', 'Do Ya Breakin!', 'Drain for rose', 'Fairy tale', 'Flowering Dreams', 'G00 1st.F∞;', 'GALmem.포에버♪', 'GET DOWN', 'Go☆Go☆for it!', 'Guten Appetit♪', 'Hephaistos', 'I Never Goof Up!', 'I\'M☆FULL☆SPEED!!', 'Illuminate you', 'Immortal Work', 'Info: Acquired', 'Into High Gear!', 'JBC 스프린트 ', 'JBC 클래식', 'JBCL 클래식', 'JD더비', 'jingle all the way', 'Joyful Voyage!', 'KEEP IT REAL.', 'L\'Arc 시나리오', 'L\'Arc의 희망', 'Mission: Triumph', 'Nemesis', 'Never Say Never', 'NHK 마일컵', 'One True Color', 'Presents from X', 'Pride of KING', 'Queen\'s Lumination', 'Ravissant', 'Reversal Illusion', 'Road to Glory', 'Schwarzes Schwert', 'Shadow Break', 'Silent letter', 'Spooky-Scary-Happy', 'trigger:BEAT', 'U.A.F.시나리오・스피어', 'U.A.F.시나리오・파이트', 'U.A.F.시나리오・프리', 'U=ma2', 'URA 시나리오', 'Vive la GOLD', 'YEAH☆VIVID TIME!', 'α-star*', '가무환락이여, 아아 우습도다', '가벼운 발걸음', '가와사키 경기장○', '가와사키 기념', '가을 우마무스메○', '간파', '강심장', '개선문상', '개선문상 연패의 꿈', '검은 구름을 흩뜨리는, 황금의 첫 화살', '겁나게 귀엽네♪머린 다이브', '게인 힐・슈피리어', '겨울 우마무스메○', '경쾌한 스텝', '고독한 늑대', '곧장 전진', '곱빼기! 퍼스트 바이트!', '공세', '공주라면, 우승을 이 손에', '교란', '교류 대상경주○', '교묘한 스텝', '교토 경기장○', '국화상', '굳히기 준비', '궁극 테이오 스텝', '귀기의 추격', '그대, 황제의 신위를 보라', '그랜드 라이브 시나리오', '그랜드 마스터즈 시나리오', '그림자 밟기', '근간거리○', '근면한 태도', '근성', '근자감', '급발진', '급부상', '기라성', '기백을 담아서', '기세로 밀어붙이기', '기어 시프트', '기합충분', '꼬리 올리기', '꽃봉오리, 피어날 때', '꽃피는, 세계', '꿈 너머로, 전해져라!', '꿈꾸는 도중', '끈질기게 버티기', '끓어오르는 피', '나찰, 붉은 날개로 천상에 이르나니', '나카야마 경기장○', '날카로운 눈빛', '남김 없이', '내리막 달인', '냉정', '너무 존귀해서 되살아났다해!', '넘치는 정열', '노력의 결과', '눈 오는 날○', '눈속임', '눈에 반사되는 빛을 쫓아서', '능숙한 파고들기', '능숙한 패스', '니이가타 경기장○', '단거리', '단거리 직선○', '단거리 코너○', '단독○', '단번에 앞지르기', '단아한 발걸음', '달려들기', '당신에게 바치는 프리 푸어링', '당신을・뒤쫓아서', '대단원', '대항 의식○', '더트', '도주', '도주 견제', '도주 긴장', '도주 심리전', '도주 주저', '도주 직선○', '도주 코너○', '도주의 요령○', '도쿄 경기장○', '도쿄 대상전', '독해력', '동경은 벚꽃을 넘는다!', '두 가지 방안', '두 번째 화살', '두근거림이 부르는 곳으로', '두근두근 클라이맥스', '두려워하지 않는 마음', '뒤처지기 방지', '뒷심', '뒹구르르!? 파워 드라이브', '등불', '등산가', '디럭스☆파운틴', '디오스쿠로이의 유성', '땅, 팟, 뭉', '땅의 가호', '또렷한 생각', '뛰어난 작전', '럭키 세븐', '레이스의 진수・근', '레이스의 진수・속', '레이스의 진수・심', '레이스의 진수・역', '레이스의 진수・지', '레이스의 진수・체', '레이스의 진수・体＋', '레이스의 진수・力＋', '레이스의 진수・心＋', '레이스의 진수・根＋', '레이스의 진수・賢＋', '레이스의 진수・速＋', '레츠 아나볼릭!', '레커멘드', '록온', '롱샹 경기장◯', '롱샹 적성', '리드 킵', '리스타트', '마군 속 냉정', '마음을 짊어지고', '마이페이스', '마일', '마일 CS', '마일 CS 남부배', '마일 직선○', '마일 코너○', '만회하기', '많이 드셔 주세유', '맑은 날○', '망설임 없음', '맞짱! 데드히트!', '모두의 나에게!', '모래 먼지 적응', '모래 샤워○', '모래 털기', '모리오카 경기장○', '모험심', '무너뜨리기', '무모함', '물고 늘어지기', '뭉클하게♪Chu', '바깥쪽 그룹 능숙○', '바다의 가호', '바짝 붙기', '반드시 그 너머로…!', '반시계(좌) 방향○', '반짝반짝☆STARDOM', '반짝이는 별의 보드빌', '받아 갈게☆스트렐리치아!', '방패막이', '백련성강', '버닝 소울', '번뜩임☆랜딩', '벚꽃상', '벼가 곧 무르익노라', '벼랑 끝에서 광기를 비웃어라', '벽력의 아우프헤벤', '복받쳐 오르는 열기', '복병○', '복을 베푸는 바르카롤', '봄 우마무스메○', '분위기 상승', '불벼락', '불침함, 출항!', '브릴리언트 레드 에이스', '블레이즈 오브 프라이드', '블루 로즈 체이서', '비 오는 날○', '비근간거리○', '빅토리 샷!', '빅토리아 마일', '빅토리아에게 바치는 무도', '빈틈 없음', '빙글빙글 머미 트릭♡', '빛나는 바다, 눈부신 그대', '빛나는 바람', '빛나라☆토마코마이', '빛의 가호', '빠른 걸음', '빠져나갈 준비', '사랑과 녹아라 그저 녹아라', '사츠키상', '삿포로 경기장○', '상승기류', '상식 파괴', '상황 파악', '새 출발', '새벽의 깃발『카츠라기 에이스』!', '생활 리듬', '서두르기', '서정, 여행길의 끝에', '선두 프라이드', '선두의 경치는 양보할 수 없어…!', '선입', '선입 견제', '선입 긴장', '선입 심리전', '선입 주저', '선입 직선○', '선입 코너○', '선입의 요령○', '선행', '선행 견제', '선행 긴장', '선행 심리전', '선행 주저', '선행 직선○', '선행 코너○', '선행의 요령○', '선후책', '설레는 마음', '세이리오스 ', '속박', '속삭임', '수많은 빛깔☆마블러스★세계', '수상한 작전', '수평선 그 너머에', '순발력', '슈팅 스타', '스리 세븐', '스태미나 이터', '스태미나 킵', '스태미너', '스프린터스 S', '스프린트 기어', '스피드', '스피드 이터', '슬립 스트림', '승리를 향해서', '승리의 고동', '승리의 티켓을 너에게!', '승리의 함성 어기여차!', '시계(우) 방향○', '시선', '심퍼시', '심호흡', '십만 마력', '쏜살같이', '아드・아스트라', '아름다운 꽃소식을 알리는 바람', '아리마 기념', '아사히배 FS', '아쉬움 없음', '아오하루 점화・근', '아오하루 점화・속', '아오하루 점화・역', '아오하루 점화・지', '아오하루 점화・체', '아오하루 점화・체＋', '아오하루 점화・역＋', '아오하루 점화・근＋', '아오하루 점화・지＋', '아오하루 점화・속＋', '아오하루배 시나리오', '안간힘', '안쪽 그룹 능숙○', '안쪽 코너 여포', '압박감', '앞만 바라보며', '앞으로 기우뚱', '앞장서기', '앞줄 겨냥', '앞지르기 금지', '액셀러레이션', '앵글링×스키밍', '야간○', '야스다 기념', '양호한 경기장○', '어둠을 비추어라 영원한 빛', '어스름이 물러서는 떠들썩한 화살', '엔진 전개! 대분사!', '엘리자배스 여왕배', '여름 우마무스메○', '여름 하늘 헐레이션', '열혈!! 선도 어택', '열화요란, 무적의 춤', '영양 관리', '영양 보급', '오기', '오사카배', '오의・한여름 버닝!!', '오이 경기장○', '오크스', '오퍼레이션・Cacao', '옵니다 오고 있습니다 오게 할 겁니다!', '외곽 추월 준비', '외장 탱크', '우등생×돌진=대승리!', '우마무스메 애호가', '운이 트여 날아오르리', '울려 퍼져라! 트레센 응원단!', '움직이지 않는 마음', '원 찬스', '위치 선정 밀어붙이기', '위풍당당, 아름다운 꿈!', '위험 회피', '의욕은 충분', '이그니션', '이른 작전', '이어가다・이어지는×꿈・미래', '일본 더비', '일생의 꿈, 찰나의 비상', '임기응변', '자제심', '작은 회전○', '작전 준비', '잔디', '장거리', '장거리 직선○', '장거리 코너○', '장난은 끝이야!', '재팬컵', '저편, 그 너머로…', '적극책', '전 일본 주니어 우준', '전개 살피기', '전도유망', '절대는, 나야', '정면 승부', '정신력', '정신일도 하사불성', '정확히 겨냥해서', '제왕상', '제일 먼저', '조용한 호흡', '존귀☆라스트 스퍼—(ﾟ∀ﾟ)—트!', '존귀한 사명을 완수하기 위하여', '좋은 위치 뒤따르기', '좋은 징조', '죽기살기', '중거리', '중거리 직선○', '중거리 코너○', '중반 달인', '쥐어짜기', '지능', '직선 가속', '직선 달인', '직선 주파', '직선 회복', '직활강', '진가 발휘', '진심어린 대접이냥', '진창길○', '진출 개시', '질풍폭주 페가수스 대시!', '집중 마크○', '집중력', '짧은 휴식', '쫀득쫀득・항상 맑음', '책사', '챔피언스컵', '천둥 번개 스텝', '초반 달인', '최강의 이름을 걸고', '최상이거라', '추격', '추력충분', '추월 확정 태세', '추입', '추입 견제', '추입 긴장', '추입 심리전', '추입 주저', '추입 직선○', '추입 코너○', '추입의 요령○', '추화상', '충전 완료! 전속 전진!', '츄쿄 경기장○', '치켜들어라, 내 영혼의 검을!', '카니발 보너스', '카시와 기념', '커팅×DRIVE!', '코너 가속○', '코너 달인○', '코너 회복○', '코쿠라 경기장○', '콘도르 맹격파', '쾌속', '쾌주로다, 쾌주로다!', '쾌활하고 굳센 힘', '크게 앞지르는 길', '크리스마스 이브의 미라클 런!', '큰 리드', '클라이맥스 시나리오', '타개책', '타카라즈카 기념', '타카마츠노미야 기념', '탐구심', '터다지기', '텐노상(가을)', '텐노상(봄)', '텐션 올려 푸쳐핸썹!', '템포 업', '투쟁심', '트릭(뒤)', '트릭(앞)', '파워', '파이오니아', '페브러리 S', '페이스 업', '페이스 킵', '포기하지 않는 마음', '포석', '포지션 센스', '폭발하는 다리', '퐁트・드・디아망', '풀 스로틀', '품행방정', '퓨리티 오브 하트', '프랑스어 실력', '프레셔', '프레시☆팔러', '플라워리☆머누버', '플란차☆가나도르', '피어라 피어라! 나!', '하굣길의 즐거움', '하얀 번개, 보여 주꾸마!', '하코다테 경기장○', '한 걸음부터', '한눈 팔지 말고', '한달음', '한신 JF', '한신 경기장○', '해외 서양잔디 적성', '해외 원정', '행복의 푸른 빛', '향상심', '호크아이', '호프풀 S', '혼신의 발걸음', '홍염 기어/LP1211-M', '확실한 발걸음', '회색 임계점', '회심의 한 걸음', '후나바시 경기장○', '후방 대기', '후방 못박기', '후쿠시마 경기장○', '훈풍, 영원한 순간을', '훌륭한 진수성찬!', '흐린 날○', '흙먼지', '흙장난○'];
    var kor_ids = [10360201, 10420101, 10380101, 10230101, 10520201, 10070201, 11060101, 10220201, 11070101, 10890101, 10410201, 10710201, 10430101, 10200201, 10300201, 10220101, 10510201, 10260101, 10480201, 10400201, 10600201, 10370201, 10500201, 10580101, 10280101, 10740201, 10830201, 10800101, 10080201, 1002801, 1002901, 1002701, 1002601, 10640201, 10100201, 10400101, 3000601, 3100901, 10830101, 10500101, 11000101, 1000701, 10380201, 10230201, 10610101, 10090201, 10050201, 10880101, 10770101, 10370101, 10160101, 10870101, 10580201, 10360101, 3101101, 3101201, 3101301, 10320101, 3000101, 10070301, 10480101, 10460201, 10030301, 2020401, 2022001, 1003401, 2001901, 2014701, 3100701, 1003501, 3101001, 10670201, 10010201, 10110201, 2002001, 2011401, 2016401, 2027501, 10120201, 2023701, 10390101, 2013701, 2022501, 2013301, 2000601, 1001501, 2005501, 10030101, 2029401, 10170101, 3000401, 3000501, 2029301, 2001301, 2014001, 401, 2026501, 2028601, 2023201, 2100601, 2021301, 2012801, 2010501, 2021101, 2016101, 10510101, 10760101, 10350201, 2100701, 2024601, 2028801, 11080101, 2000401, 2014401, 2017001, 2021701, 2014901, 10190201, 2026101, 2020101, 2002401, 2012301, 10290101, 2023301, 2012001, 2001101, 3101, 2009601, 2009701, 2002701, 2028501, 2025301, 2024701, 10270201, 10250101, 2028101, 2002801, 1201, 2101, 2008301, 2008401, 2007901, 2008501, 2012401, 2012501, 2015201, 2000301, 1003001, 2014301, 10690101, 2028301, 2012901, 10590201, 10520101, 2021201, 2004901, 2005101, 10620201, 10340201, 2015801, 10910101, 10330101, 10620101, 2102801, 2022901, 2006301, 2015601, 2101101, 2100801, 2101301, 2101001, 2101201, 2100901, 2101501, 2101601, 2101901, 2101701, 2101801, 2101401, 10270101, 2016701, 2025601, 2027301, 3100201, 2011901, 2013001, 2004801, 2102901, 2020701, 3201, 1001801, 1003101, 2010301, 2010401, 2022701, 10290201, 2002101, 2028201, 10120101, 10680301, 2020001, 2023001, 2028401, 2022201, 2024401, 2029101, 2025001, 2007301, 10040201, 2002601, 2102701, 2006701, 10600101, 2000201, 10460101, 10050101, 10440101, 2004401, 10630101, 2103001, 10240101, 1000401, 10560201, 10490101, 10840101, 2026601, 2003001, 10150201, 2001701, 2026801, 10210201, 10070101, 10090101, 10180101, 10300101, 2002301, 2001401, 10100101, 1000801, 10150101, 2021901, 10450201, 10130301, 10780101, 10990101, 2102601, 2005401, 2005801, 10860101, 1000501, 2000801, 2007001, 2025201, 2006601, 2013601, 11040101, 3100301, 2025901, 10570101, 2012701, 10020101, 2301, 2008901, 2009001, 2008101, 2009101, 2013801, 2013901, 2015401, 2201, 2008601, 2008701, 2008001, 2008801, 2013101, 2013201, 2015301, 2009901, 2026701, 10700101, 2011501, 2011601, 10550101, 2020301, 10020201, 2024901, 10010101, 2015701, 2012201, 2005601, 201, 1001301, 2006501, 101, 2010801, 2016501, 2027601, 10060101, 10350101, 10680101, 2000101, 2015101, 2016301, 2007401, 2014101, 2022801, 11050101, 10740101, 1002301, 1002201, 2029201, 2100401, 2100101, 2100301, 2100501, 2100201, 2102201, 2102301, 2102401, 2102501, 2102101, 3000201, 2023901, 2002501, 2007501, 2023601, 2102001, 2021001, 2005301, 2016801, 2010201, 2010601, 10200101, 2022301, 1001101, 2001501, 10670101, 10170201, 10660101, 1001701, 2001801, 10320201, 10530101, 10720101, 3100401, 2013501, 2010701, 1000301, 10530201, 2009501, 1000901, 10260201, 10560101, 2006101, 2007601, 10410101, 2015901, 10980101, 10610201, 2028901, 2020801, 2005901, 10010301, 2012601, 2023101, 2026001, 2020201, 11090101, 1001001, 10710101, 2005001, 2021601, 2022401, 2010001, 1101, 3401, 2011701, 2011801, 2016601, 1001901, 10590101, 2006801, 1003301, 2006901, 2007101, 10030201, 2019001, 3100801, 10110101, 2027701, 1002501, 2026901, 2016901, 10190101, 10130101, 2005701, 2022601, 2024201, 3301, 2011001, 2011101, 2027901, 2016201, 501, 2003701, 2003601, 2006401, 2003801, 2013401, 2024801, 10250201, 2001601, 2026201, 10540101, 2002901, 2004301, 2014201, 10600301, 2015001, 1002001, 2011301, 2028001, 10130201, 10850101, 2012101, 2029001, 2006001, 2401, 2009201, 2009301, 2008201, 2009401, 2014501, 2014601, 2015501, 1001401, 10310101, 2000701, 10470101, 4000101, 1003201, 10080101, 2003401, 2003301, 2003501, 2001201, 10140201, 2025501, 10340101, 10390201, 10640101, 10060201, 2009801, 3000301, 2023801, 1001201, 1000201, 2027001, 2016001, 1001601, 1000601, 10650101, 2007201, 2020901, 2007801, 2007701, 301, 2029501, 1000101, 2004601, 2004701, 2027201, 2010901, 2004501, 2024501, 10670301, 2021501, 2027401, 10450101, 3100501, 2025401, 10310201, 10240201, 10140101, 10690201, 2014801, 10210101, 2000901, 2026401, 2025801, 2024001, 1002101, 2000501, 3100101, 3100601, 10930101, 2024101, 2011201, 1002401, 2028701, 10040101, 2024301, 10160201, 2027101, 2022101, 2006201, 2010101, 2001001, 10180201, 10680201, 2002201, 2023501, 2023401];
    var newRowHtml = "<div class='row'>" + "<div class='col-9'>" + "<div class='form-group inshiname'>" + "<label for='inshiname'>";
    if (lang == null || lang === undefined || !lang || lang == "ko") {
        newRowHtml += "인자";
    } else if (lang == "ja") {
        newRowHtml += "因子";
    } else {
        newRowHtml += "Inshi";
    }
    newRowHtml += "</label>" + "<select name='inshiname[]' class='form-control ' required>";
    for (var i = 0; i < ids.length; i++) {
        if (lang == null || lang === undefined || !lang || lang == "ko") {
            newRowHtml += "<option value='" + kor_ids[i] + "'>" + kor_names[i] + "</option>";
        } else {
            newRowHtml += "<option value='" + ids[i] + "'>" + names[i] + "</option>";
        }
    }
    newRowHtml += "</select>" + "</div>" + "</div>" + "<div class='col-3'>" + "<div class='form-group inshilv'>" + "<label for='inshilv'>";
    newRowHtml += "Lv.</label>" + "<select name='inshilv[]' class='form-control' required>" + "<option value='1'>1</option>" + "<option value='2'>2</option>" + "<option value='3'>3</option>" + "<option value='4'>4</option>" + "<option value='5'>5</option>" + "<option value='6'>6</option>" + "<option value='7'>7</option>" + "<option value='8'>8</option>" + "<option value='9'>9</option>" + "</select>" + "</div>" + "</div>" + "</div>";
    document.getElementById("inshiRows").insertAdjacentHTML('beforeend', newRowHtml);
}

function inshiPrint() {

    var form = document.getElementById('postF');
    var inshinameSelects = document.querySelectorAll('.inshiname select');
    var inshilvSelects = document.querySelectorAll('.inshilv select');
    var inshiData = document.getElementById("inshi");
    var formData = new FormData(form);
    for (var i = 0; i < inshinameSelects.length; i++) {
        var inshiValue = inshinameSelects[i].value + ":" + inshilvSelects[i].value + ",";
        inshiData.value += inshiValue;
    }
    submitForm();
    //inshiData.value = inshiData.value.slice(0,-1);
}

function submitForm() {
    var form = document.getElementById('postF');
    var inshiData = document.getElementById("inshi");

    inshiData.value = inshiData.value.slice(0, -1);
    form.submit();
}
